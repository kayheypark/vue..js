d:
cd vue-todo
npm run dev

프론트엔드 front-end - 화면동작
백엔드 back-end - 데이터베이스 데이터 처리

프레임워크
:개발자들의 개발 생산성을 높이기 위해 일정한 틀과 규칙에 따라 개발하도록
미리 구조를 정의해 놓은 도구

자바스크립트 프레임워크
react 페북
angular 구글
vue


M(model)V(view)VM(ViewModel)

뷰View - 사용자에게 보이는 화면
돔DOM - HTML 문서에 들어가 있는 요소의 정보를 담고 있는 
	데이터 트리구조

모델Model - 데이터를 담는 용기. 보통은 서버에서 가져온 데이터를
	 자바스크립트 객체 형태로 저장.

뷰 모델View Model - 뷰와 모델의 중간 영역.
	돔리스너와 데이터 바인딩을 제공하는 영역

돔 리스너DOM Listener - 돔의 변경 내역에 대해
	즉각적으로 반응하여 특정 로직을 수행하는 장치

데이터 바인딩Data Binding - 뷰에 표시되는
			내용과 모델의 데이터를 동기화

디렉티브Directive
:html태그 안에 v-접두사를 가지는 모든 속성.
화면의 요소를 더 쉽게 조작하기 위해 사용.

v-model
:form에서 주로 사용. 폼에 입력한 값을 뷰 인스턴스의
데이터와 즉시 동기화.
input,select,textarea만 사용가능

v-on
:화면요소의 이벤트를 감지하여 처리. 특정 메서드 함수 실행.
간단히 v-don:click를 @click으로

v-for
:지정한 뷰 데이터의 개수만큼 해당 html태그를 반복

v-bind
:html태그의 기본 속성과 뷰데이터속성을 연결
v-bind:id="뷰데이터속성값"

로컬 스토리지
:브라우저에 20MB 저장공간

new Vue() 새로운 뷰 객체(인스턴스) 생성

created() - 뷰 인스턴스가 생성되자마자
 뷰 데이터에
접근할 수 있도록 created() 라이프 사이클 훅hook

Mounted() - 뷰 인스턴스를 화면에 부착

updated() - 뷰 인스턴스의 내용이 갱신되었을 때

destroyed() - 뷰 인스턴스 소멸

CMUD